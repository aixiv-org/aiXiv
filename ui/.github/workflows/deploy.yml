name: Deploy to AWS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
        
    - name: Install dependencies
      working-directory: ./ui
      run: npm ci
      
    - name: Build application
      working-directory: ./ui
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Deploy to S3
      working-directory: ./ui
      run: |
        # Create S3 bucket if it doesn't exist
        aws s3 mb s3://aixiv-frontend --region us-east-1 || true
        
        # Disable Block Public Access settings
        aws s3api put-public-access-block --bucket aixiv-frontend --public-access-block-configuration "BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false"
        
        # Configure S3 bucket for static website hosting
        aws s3 website s3://aixiv-frontend --index-document index.html --error-document index.html
        
        # Create bucket policy for public read access
        cat > bucket-policy.json << EOF
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "PublicReadGetObject",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": "arn:aws:s3:::aixiv-frontend/*"
                }
            ]
        }
        EOF
        
        aws s3api put-bucket-policy --bucket aixiv-frontend --policy file://bucket-policy.json
        
        # Upload files to S3
        aws s3 sync build/ s3://aixiv-frontend --delete --cache-control "max-age=31536000,public"
        
    - name: Invalidate CloudFront cache
      run: |
        # Get CloudFront distribution ID
        DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[?contains(@, 'aixiv.co')]].Id" --output text)
        
        if [ ! -z "$DISTRIBUTION_ID" ] && [ "$DISTRIBUTION_ID" != "None" ]; then
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
        fi
        
    - name: Deploy status
      run: |
        echo "✅ Deployment completed!"
        echo "🌐 Your site will be available at: https://aixiv.co"
        echo "⏳ CloudFront distribution may take 10-15 minutes to fully deploy." 