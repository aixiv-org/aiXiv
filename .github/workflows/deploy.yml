name: Deploy to AWS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
        
    - name: Install dependencies
      working-directory: ./ui
      run: npm ci
      
    - name: Build application
      working-directory: ./ui
      env:
        REACT_APP_CLERK_PUBLISHABLE_KEY: ${{ secrets.REACT_APP_CLERK_PUBLISHABLE_KEY }}
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Deploy to S3
      working-directory: ./ui
      run: |
        echo "üì§ Uploading files to S3..."
        aws s3 sync build/ s3://aixiv-frontend --delete --cache-control "max-age=31536000,public"
        echo "‚úÖ Files uploaded to S3"
        
    - name: Invalidate CloudFront cache
      run: |
        echo "üîÑ Invalidating CloudFront cache..."
        # Get CloudFront distribution ID for aixiv.co
        DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[?contains(@, 'aixiv.co')]].Id" --output text)
        
        if [ ! -z "$DISTRIBUTION_ID" ] && [ "$DISTRIBUTION_ID" != "None" ]; then
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
          echo "‚úÖ CloudFront cache invalidated for distribution: $DISTRIBUTION_ID"
        else
          echo "‚ö†Ô∏è  No CloudFront distribution found for aixiv.co"
          echo "   Please run aws-deploy.sh first to set up infrastructure"
          exit 1
        fi
        
    - name: Deploy status
      run: |
        echo "‚úÖ Application deployment completed!"
        echo "üåê Your site will be available at: https://aixiv.co"
        echo "‚è≥ CloudFront changes may take 5-10 minutes to propagate"
        echo ""
        echo "üìã What was deployed:"
        echo "   - React app built and uploaded to S3"
        echo "   - CloudFront cache invalidated"
        echo ""
        echo "üîß For infrastructure changes (S3, CloudFront, DNS, SSL):"
        echo "   Use: ./aws-deploy.sh" 